SOURCE_IMAGE = os.getenv("SOURCE_IMAGE", default='${IMAGE_REGISTRY_HOSTNAME}/tap-workloads-source-code/${MICROSERVICE_NAME}')
LOCAL_PATH = os.getenv("LOCAL_PATH", default='.')
NAMESPACE = os.getenv("NAMESPACE", default='${DEVELOPER_NAMESPACE}')

k8s_custom_deploy(
    '${MICROSERVICE_NAME}',
    apply_cmd="tanzu apps workload apply -f config/workload.yaml --live-update" +
      " --local-path " + LOCAL_PATH +
      " --source-image " + SOURCE_IMAGE +
      " --namespace " + NAMESPACE +
      " --yes >/dev/null" +
      " && kubectl get workload ${MICROSERVICE_NAME} --namespace " + NAMESPACE + " -o yaml",
    delete_cmd="tanzu apps workload delete -f config/workload.yaml --namespace " + NAMESPACE + " --yes" ,

    # Live Update VScode:
    deps=['build.gradle.kts', './bin/main'],
    live_update=[
        sync('./bin/main', '/workspace/BOOT-INF/classes')
    ]
)

k8s_resource('${MICROSERVICE_NAME}', port_forwards=["${APP_PORT}:${APP_PORT}"],
   extra_pod_selectors=[{'carto.run/workload-name': '${MICROSERVICE_NAME}', 'app.kubernetes.io/component': 'run'}])

allow_k8s_contexts('lan-nonprod-dev0')